#####数据库连接信息#####
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#####以下为druid增加的配置#####
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true





# 服务器端口号，默认8080，这里配的是多少就是多少
server.port=1111
#服务地址ip，写真是ip才可以支持局域网
server.address = 127.0.0.1
#设定应用的context-path.项目请求路径
server.context-path =/tt
#设定dispatcherservlet的监听路径，默认为: / 
server.servlet-path=/
#session的超时时间 秒
server.session.timeout=300
server.session.persistent = true

#server.tomcat.uri-encoding=utf-8

##指定mvc视图的前缀.
#spring.mvc.view.prefix=/jsp/
##指定mvc视图的后缀.
#spring.mvc.view.suffix=.jsp

spring.thymeleaf.prefix=classpath:static/jsp/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html # ;charset=<encoding> is added

spring.thymeleaf.cache=false

#简易配置日志输出
#logging.level.org.springframework.web=INFO 
#logging.file=./logs/springboot.log

# 指向mapper的xml文件位置
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
# Mapper文件中resultMap和resultType直接写实体名称
mybatis.type-aliases-package=com.fengpiaoxu.entity
# mybatis.config：mybatis-config.xml配置文件的路径#
# mybatis.typeHandlersPackage：扫描typeHandlers的包#
# mybatis.checkConfigLocation：检查配置文件是否存在#
# mybatis.executorType：设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE#